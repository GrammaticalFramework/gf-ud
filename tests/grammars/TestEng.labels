#word not not Polarity=Neg
#word is   be  Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin
#word are  be  Mood=Ind|Tense=Pres|VerbForm=Fin
#word am   be  Mood=Ind|Number=Sing|Person=1|Tense=Pres|VerbForm=Fin
#word was  be  Mood=Ind|Number=Sing|Person=3|Tense=Past|VerbForm=Fin
#word were be  Mood=Ind|Tense=Past|VerbForm=Fin
#word been be  Tense=Past|VerbForm=Part
#word be   be  VerbForm=Inf
#word has  have  Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin
#word have have  VerbForm=Inf
#word had  have  Mood=Ind|Tense=Past|VerbForm=Fin
#word does  do  Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin
#word do do  VerbForm=Inf
#word did  do  Mood=Ind|Tense=Past|VerbForm=Fin
#word would would  VerbForm=Fin
#word will  will VerbForm=Fin
#word not not Polarity=Neg

#lemma UseCl,UseQCl,ImpVP not Neg advmod head
#lemma UseAP,UseAdv,UseNP be Cop cop head
#lemma PredVP have Have aux head
#lemma PredVP,ImpVP do Do aux head

#morpho N 0 Number=Sing
#morpho N 1 Number=Plur

#morpho Pron 0 Case=Nom|PronType=Prs -- --- Case=Nom|Number=Sing|Person=1|PronType=Prs
#morpho Pron 1 Case=Acc|PronType=Prs -- --- Case=Acc|Number=Sing|Person=1|PronType=Prs

#morpho V,V2 0 VerbForm=Inf
#morpho V,V2 1 Mood=Ind|Number=Sing|Person=3|Tense=Pres|VerbForm=Fin
#morpho V,V2 2 Mood=Ind|Tense=Past|VerbForm=Fin
#morpho V,V2 3 Tense=Past|VerbForm=Part
#morpho V,V2 4 Tense=Pres|VerbForm=Part

#discont V2 0-4,head  5,ADP,case,obj

#multiword Prep head-first fixed

-- to deal with the_Det / thePl_Det, together with #auxfun annotations in MiniLang.labels
#lemma the_Det,thePl_Det the The head head

-- below needed in ud2gf only

#auxfun UseAP_Cop cop comp : Cop -> AP -> VP = UseAP comp ; cop head

#auxfun QuestCl_Do aux cl : Do -> Cl -> QCl = QuestCl cl ; aux head

#auxfun UseCl_Sim cl : Cl -> S = UseCl TSim PPos cl ; head
#auxfun UseCl_Ant have cl : Have -> Cl -> S = UseCl TAnt PPos cl ; aux head
#auxfun UseCl_NegSim do neg cl : Do -> Neg -> Cl -> S = UseCl TSim PNeg cl ; aux advmod head
#auxfun UseCl_NegAnt have neg cl : Have -> Neg -> Cl -> S = UseCl TAnt PNeg cl ; aux advmod head
#auxfun UseCl_NegCop neg cl : Neg -> Cl -> S = UseCl TSim PNeg cl ; advmod head


#auxcat Cop AUX
#auxcat Do AUX
#auxcat Have AUX
#auxcat Neg PART

#disable UseAP QuestCl UseCl

#altfun ComplV2 head obl

-- to deal with the_Det / thePl_Det, together with a #lemma for The in MiniLangEng.labels
#auxcat The DET
#auxfun DetCN_theSg det cn : The -> CN -> NP = DetCN the_Det cn ; det[LEMMA=the] head[Number=Sing]
#auxfun DetCN_thePl det cn : The -> CN -> NP = DetCN thePl_Det cn ; det[LEMMA=the] head[Number=Plur]
#disable the_Det thePl_Det

-- disable plurals as mass terms
#auxfun MassNP_sg cn : CN -> NP = MassNP cn ; head[Number=Sing]
#auxfun DetCN_aPl cn : CN -> NP = DetCN aPl_Det cn ; head[Number=Plur]
#disable MassNP



#auxfun DetCN_anySg det cn : Det -> CN -> NP = DetCN anySg_Det cn ; det[LEMMA=any] head[Number=Sing]
#auxfun DetCN_anyPl det cn : Det -> CN -> NP = DetCN anyPl_Det cn ; det[LEMMA=any] head[Number=Plur]
#disable anyPl_Det anySg_Det

#auxfun DetCN_someSg det cn : Det -> CN -> NP = DetCN someSg_Det cn ; det[LEMMA=some] head[Number=Sing]
#auxfun DetCN_somePl det cn : Det -> CN -> NP = DetCN somePl_Det cn ; det[LEMMA=some] head[Number=Plur]
#disable somePl_Det someSg_Det

#disable ImpVP